pragma solidity ^0.4.16;
/* * Contract that is working with ERC223 tokens */
 
contract ContractReceiver {
 
    struct TKN {
        address sender; //调用合约的人
        uint value;
        bytes data;
        bytes4 sig; //签名
    }
 
    /**
    该函数表明了当调用了 transfer交易函数由A(可以使任何账户) 向合约B交易token时时,函数中的逻辑必须是 
     _from是令牌发送者，_value是传入令牌的数量，
    _data是附加的数据，类似于Ether事务中的数据。 适用于以太交易的回退功能，并且不返回任何内容。
    【注意】: 过滤哪些令牌（通过token合约的账户地址）发送可以被发送很重要。 
    令牌发送者（谁发起了代币交易的人）将_from传入tokenFallback函数内。
    【重要】: 这个函数必须命名为tokenFallback，并使用参数地址uint256，字节来匹配函数签名0xc0ee0b8a
     */
    function tokenFallback(address _from, uint _value, bytes _data) public {
        TKN memory tkn;
        tkn.sender = _from;
        tkn.value = _value;
        tkn.data = _data;
        uint32 u = uint32(_data[3]) + (uint32(_data[2]) << 8) + (uint32(_data[1]) << 16) + (uint32(_data[0]) << 24);
        tkn.sig = bytes4(u);
 
        /* tkn变量是Ether交易的msg变量的模拟 * tkn.sender是发起这个令牌交易的人（类似于msg.sender） * tkn.value发送的令牌数（msg.value的类比） * tkn.data是令牌交易的数据（类似于msg.data） * tkn.sig是4字节的功能签名  */
    }
}
